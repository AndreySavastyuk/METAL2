#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –º–æ–¥—É–ª—è –∫–æ–Ω—Ç—Ä–æ–ª—è –∫–∞—á–µ—Å—Ç–≤–∞
"""
import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from django.contrib.auth.models import User
from apps.warehouse.models import Material, MaterialReceipt
from apps.quality.models import QCInspection, QCChecklist, QCChecklistItem, QCInspectionResult


def create_qc_test_data():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –º–æ–¥—É–ª—è –û–¢–ö"""
    
    print("–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –º–æ–¥—É–ª—è –û–¢–ö...")
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    admin_user = User.objects.get(username='admin')
    qc_inspector, created = User.objects.get_or_create(
        username='qc_inspector',
        defaults={
            'email': 'qc@metalqms.local',
            'first_name': '–ü–µ—Ç—Ä',
            'last_name': '–ö–æ–Ω—Ç—Ä–æ–ª–µ—Ä'
        }
    )
    
    print(f"–ò–Ω—Å–ø–µ–∫—Ç–æ—Ä –û–¢–ö: {qc_inspector.username}")
    
    # –°–æ–∑–¥–∞–µ–º —á–µ–∫-–ª–∏—Å—Ç—ã
    print("\nüìã –°–æ–∑–¥–∞–Ω–∏–µ —á–µ–∫-–ª–∏—Å—Ç–æ–≤...")
    
    # –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —á–µ–∫-–ª–∏—Å—Ç –¥–ª—è –≤—Å–µ—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
    universal_checklist, created = QCChecklist.objects.get_or_create(
        name='–£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –≤—Ö–æ–¥—è—â–∏—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤',
        material_grade='',
        defaults={
            'description': '–ë–∞–∑–æ–≤–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –≤—Å–µ—Ö –ø–æ—Å—Ç—É–ø–∞—é—â–∏—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤',
            'version': '1.0',
            'created_by': admin_user,
            'updated_by': admin_user
        }
    )
    
    if created:
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π —á–µ–∫-–ª–∏—Å—Ç: {universal_checklist}")
        
        # –ü—É–Ω–∫—Ç—ã —É–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω–æ–≥–æ —á–µ–∫-–ª–∏—Å—Ç–∞
        universal_items = [
            {
                'order': 1,
                'description': '–ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏—è –º–∞—Ä–∫–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –¥–æ–∫—É–º–µ–Ω—Ç–∞–º',
                'is_critical': True,
                'acceptance_criteria': '–ú–∞—Ä–∫–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ –Ω–∞ –±–∏—Ä–∫–µ –¥–æ–ª–∂–Ω–∞ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–æ–≤–∞—Ç—å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—É'
            },
            {
                'order': 2,
                'description': '–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ü–µ–ª–æ—Å—Ç–Ω–æ—Å—Ç–∏ —É–ø–∞–∫–æ–≤–∫–∏',
                'is_critical': False,
                'acceptance_criteria': '–£–ø–∞–∫–æ–≤–∫–∞ –¥–æ–ª–∂–Ω–∞ –±—ã—Ç—å –Ω–µ–ø–æ–≤—Ä–µ–∂–¥–µ–Ω–Ω–æ–π, –±–µ–∑ –ø—Ä–∏–∑–Ω–∞–∫–æ–≤ –∫–æ—Ä—Ä–æ–∑–∏–∏'
            },
            {
                'order': 3,
                'description': '–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–º–ø–ª–µ–∫—Ç–Ω–æ—Å—Ç–∏ –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤',
                'is_critical': True,
                'acceptance_criteria': '–ù–∞–ª–∏—á–∏–µ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞ –∫–∞—á–µ—Å—Ç–≤–∞ –∏ –ø–∞—Å–ø–æ—Ä—Ç–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–∞'
            },
            {
                'order': 4,
                'description': '–í–∏–∑—É–∞–ª—å–Ω—ã–π –∫–æ–Ω—Ç—Ä–æ–ª—å –ø–æ–≤–µ—Ä—Ö–Ω–æ—Å—Ç–∏',
                'is_critical': False,
                'acceptance_criteria': '–û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –≤–∏–¥–∏–º—ã—Ö –¥–µ—Ñ–µ–∫—Ç–æ–≤, —Ç—Ä–µ—â–∏–Ω, –≤–º—è—Ç–∏–Ω'
            },
            {
                'order': 5,
                'description': '–ü—Ä–æ–≤–µ—Ä–∫–∞ –≥–µ–æ–º–µ—Ç—Ä–∏—á–µ—Å–∫–∏—Ö —Ä–∞–∑–º–µ—Ä–æ–≤ (–≤—ã–±–æ—Ä–æ—á–Ω–æ)',
                'is_critical': False,
                'acceptance_criteria': '–û—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –Ω–µ –¥–æ–ª–∂–Ω—ã –ø—Ä–µ–≤—ã—à–∞—Ç—å –¥–æ–ø—É—Å–∫–∏ –ì–û–°–¢'
            }
        ]
        
        for item_data in universal_items:
            QCChecklistItem.objects.create(
                checklist=universal_checklist,
                created_by=admin_user,
                updated_by=admin_user,
                **item_data
            )
    
    # –ß–µ–∫-–ª–∏—Å—Ç –¥–ª—è –Ω–µ—Ä–∂–∞–≤–µ—é—â–∏—Ö —Å—Ç–∞–ª–µ–π
    stainless_checklist, created = QCChecklist.objects.get_or_create(
        name='–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–µ—Ä–∂–∞–≤–µ—é—â–∏—Ö —Å—Ç–∞–ª–µ–π',
        material_grade='X18H10',
        defaults={
            'description': '–°–ø–µ—Ü–∏–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ –¥–ª—è –Ω–µ—Ä–∂–∞–≤–µ—é—â–∏—Ö —Å—Ç–∞–ª–µ–π',
            'version': '1.0',
            'created_by': admin_user,
            'updated_by': admin_user
        }
    )
    
    if created:
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω —á–µ–∫-–ª–∏—Å—Ç –¥–ª—è –Ω–µ—Ä–∂–∞–≤–µ—é—â–∏—Ö —Å—Ç–∞–ª–µ–π: {stainless_checklist}")
        
        stainless_items = [
            {
                'order': 1,
                'description': '–ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∞–≥–Ω–∏—Ç–Ω–æ—Å—Ç–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–∞',
                'is_critical': True,
                'acceptance_criteria': '–ú–∞—Ç–µ—Ä–∏–∞–ª –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –Ω–µ–º–∞–≥–Ω–∏—Ç–Ω—ã–º –∏–ª–∏ —Å–ª–∞–±–æ–º–∞–≥–Ω–∏—Ç–Ω—ã–º'
            },
            {
                'order': 2,
                'description': '–ö–æ–Ω—Ç—Ä–æ–ª—å —Ö–∏–º–∏—á–µ—Å–∫–æ–≥–æ —Å–æ—Å—Ç–∞–≤–∞ (–ø–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—É)',
                'is_critical': True,
                'acceptance_criteria': '–°–æ–¥–µ—Ä–∂–∞–Ω–∏–µ Cr ‚â• 17%, Ni ‚â• 8% –¥–ª—è –∞—É—Å—Ç–µ–Ω–∏—Ç–Ω—ã—Ö —Å—Ç–∞–ª–µ–π'
            },
            {
                'order': 3,
                'description': '–ü—Ä–æ–≤–µ—Ä–∫–∞ –Ω–∞ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –∫–∞—Ä–±–∏–¥–Ω—ã—Ö –≤—ã–¥–µ–ª–µ–Ω–∏–π',
                'is_critical': False,
                'acceptance_criteria': '–û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –≤–∏–¥–∏–º—ã—Ö –∫–∞—Ä–±–∏–¥–Ω—ã—Ö –≤–∫–ª—é—á–µ–Ω–∏–π'
            }
        ]
        
        for item_data in stainless_items:
            QCChecklistItem.objects.create(
                checklist=stainless_checklist,
                created_by=admin_user,
                updated_by=admin_user,
                **item_data
            )
    
    # –ß–µ–∫-–ª–∏—Å—Ç –¥–ª—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–æ–Ω–Ω—ã—Ö —Å—Ç–∞–ª–µ–π
    structural_checklist, created = QCChecklist.objects.get_or_create(
        name='–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–æ–Ω–Ω—ã—Ö —Å—Ç–∞–ª–µ–π',
        material_grade='40X',
        defaults={
            'description': '–ü—Ä–æ–≤–µ—Ä–∫–∞ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–æ–Ω–Ω—ã—Ö –ª–µ–≥–∏—Ä–æ–≤–∞–Ω–Ω—ã—Ö —Å—Ç–∞–ª–µ–π',
            'version': '1.0',
            'created_by': admin_user,
            'updated_by': admin_user
        }
    )
    
    if created:
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω —á–µ–∫-–ª–∏—Å—Ç –¥–ª—è –∫–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–æ–Ω–Ω—ã—Ö —Å—Ç–∞–ª–µ–π: {structural_checklist}")
        
        structural_items = [
            {
                'order': 1,
                'description': '–ö–æ–Ω—Ç—Ä–æ–ª—å —Ç–≤–µ—Ä–¥–æ—Å—Ç–∏ (–ø–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç—É)',
                'is_critical': True,
                'acceptance_criteria': '–¢–≤–µ—Ä–¥–æ—Å—Ç—å –≤ –ø—Ä–µ–¥–µ–ª–∞—Ö –ì–û–°–¢ –¥–ª—è –¥–∞–Ω–Ω–æ–π –º–∞—Ä–∫–∏'
            },
            {
                'order': 2,
                'description': '–ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç–µ—Ä–º–æ–æ–±—Ä–∞–±–æ—Ç–∫–∏',
                'is_critical': True,
                'acceptance_criteria': '–ù–∞–ª–∏—á–∏–µ –¥–∞–Ω–Ω—ã—Ö –æ —Ç–µ—Ä–º–æ–æ–±—Ä–∞–±–æ—Ç–∫–µ –≤ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–µ'
            },
            {
                'order': 3,
                'description': '–£–ª—å—Ç—Ä–∞–∑–≤—É–∫–æ–≤–æ–π –∫–æ–Ω—Ç—Ä–æ–ª—å (–ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏)',
                'is_critical': False,
                'acceptance_criteria': '–û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö –¥–µ—Ñ–µ–∫—Ç–æ–≤ –ø–æ –£–ó–ö'
            }
        ]
        
        for item_data in structural_items:
            QCChecklistItem.objects.create(
                checklist=structural_checklist,
                created_by=admin_user,
                updated_by=admin_user,
                **item_data
            )
    
    # –°–æ–∑–¥–∞–µ–º –∏–Ω—Å–ø–µ–∫—Ü–∏–∏ –¥–ª—è —Å—É—â–µ—Å—Ç–≤—É—é—â–∏—Ö –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–π
    print("\nüîç –°–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Å–ø–µ–∫—Ü–∏–π...")
    
    material_receipts = MaterialReceipt.objects.all()[:3]  # –ë–µ—Ä–µ–º –ø–µ—Ä–≤—ã–µ 3 –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è
    
    for receipt in material_receipts:
        inspection, created = QCInspection.objects.get_or_create(
            material_receipt=receipt,
            defaults={
                'inspector': qc_inspector,
                'status': 'in_progress',
                'comments': f'–ü–ª–∞–Ω–æ–≤–∞—è –∏–Ω—Å–ø–µ–∫—Ü–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–∞ {receipt.material.material_grade}',
                'created_by': qc_inspector,
                'updated_by': qc_inspector
            }
        )
        
        if created:
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –∏–Ω—Å–ø–µ–∫—Ü–∏—è: {inspection}")
            
            # –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞—é—Ç—Å—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã —á–µ—Ä–µ–∑ —Å–∏–≥–Ω–∞–ª post_save
            results_count = inspection.inspection_results.count()
            print(f"  üìù –°–æ–∑–¥–∞–Ω–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {results_count}")
            
            # –ó–∞–ø–æ–ª–Ω–∏–º –Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏
            results = list(inspection.inspection_results.all())
            
            # –ó–∞–ø–æ–ª–Ω—è–µ–º –ø–µ—Ä–≤—ã–µ 2-3 —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞
            for i, result in enumerate(results[:3]):
                if i == 0:  # –ü–µ—Ä–≤—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç - –ø—Ä–æ–π–¥–µ–Ω
                    result.result = 'passed'
                    result.notes = '–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º'
                    result.measured_value = '–°–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É–µ—Ç'
                elif i == 1:  # –í—Ç–æ—Ä–æ–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç - —É—Å–ª–æ–≤–Ω–æ –ø—Ä–æ–π–¥–µ–Ω
                    result.result = 'passed'
                    result.notes = '–ù–µ–∑–Ω–∞—á–∏—Ç–µ–ª—å–Ω—ã–µ –∑–∞–º–µ—á–∞–Ω–∏—è –ø–æ —É–ø–∞–∫–æ–≤–∫–µ'
                    result.measured_value = '–£–¥–æ–≤–ª–µ—Ç–≤–æ—Ä–∏—Ç–µ–ª—å–Ω–æ'
                elif i == 2:  # –¢—Ä–µ—Ç–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç - –∑–∞–≤–∏—Å–∏—Ç –æ—Ç –∫—Ä–∏—Ç–∏—á–Ω–æ—Å—Ç–∏
                    if result.checklist_item.is_critical:
                        result.result = 'passed'
                        result.notes = '–î–æ–∫—É–º–µ–Ω—Ç—ã –≤ –ø–æ—Ä—è–¥–∫–µ'
                    else:
                        result.result = 'na'
                        result.notes = '–ù–µ –ø—Ä–∏–º–µ–Ω–∏–º–æ –¥–ª—è –¥–∞–Ω–Ω–æ–≥–æ —Ç–∏–ø–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–∞'
                
                result.inspector_signature = f'{qc_inspector.first_name} {qc_inspector.last_name}'
                result.updated_by = qc_inspector
                result.save()
    
    # –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –º–æ–¥—É–ª—è –û–¢–ö:")
    print(f"–í—Å–µ–≥–æ —á–µ–∫-–ª–∏—Å—Ç–æ–≤: {QCChecklist.objects.count()}")
    print(f"–í—Å–µ–≥–æ –ø—É–Ω–∫—Ç–æ–≤ —á–µ–∫-–ª–∏—Å—Ç–æ–≤: {QCChecklistItem.objects.count()}")
    print(f"–ö—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—É–Ω–∫—Ç–æ–≤: {QCChecklistItem.objects.filter(is_critical=True).count()}")
    print(f"–í—Å–µ–≥–æ –∏–Ω—Å–ø–µ–∫—Ü–∏–π: {QCInspection.objects.count()}")
    print(f"–ó–∞–≤–µ—Ä—à–µ–Ω–Ω—ã—Ö –∏–Ω—Å–ø–µ–∫—Ü–∏–π: {QCInspection.objects.filter(status='completed').count()}")
    print(f"–í –ø—Ä–æ—Ü–µ—Å—Å–µ: {QCInspection.objects.filter(status='in_progress').count()}")
    print(f"–í—Å–µ–≥–æ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {QCInspectionResult.objects.count()}")
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è–º
    ppsd_required = QCInspection.objects.filter(requires_ppsd=True).count()
    uzk_required = QCInspection.objects.filter(requires_ultrasonic=True).count()
    
    print(f"\nüî¨ –°–ø–µ—Ü–∏–∞–ª—å–Ω—ã–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏—è:")
    print(f"–¢—Ä–µ–±—É—é—Ç –ü–ü–°–î: {ppsd_required}")
    print(f"–¢—Ä–µ–±—É—é—Ç –£–ó–ö: {uzk_required}")
    
    # –î–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è –∞–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π
    print(f"\nü§ñ –ê–≤—Ç–æ–æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π:")
    for inspection in QCInspection.objects.all():
        material = inspection.material_receipt.material
        print(f"  {material.material_grade} ({material.size}):")
        print(f"    –ü–ü–°–î: {'–î–∞' if inspection.requires_ppsd else '–ù–µ—Ç'}")
        print(f"    –£–ó–ö: {'–î–∞' if inspection.requires_ultrasonic else '–ù–µ—Ç'}")
    
    print("\nüéâ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ –¥–ª—è –º–æ–¥—É–ª—è –û–¢–ö —Å–æ–∑–¥–∞–Ω—ã!")
    print("üåê –ê–¥–º–∏–Ω–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É: http://127.0.0.1:8000/admin/")
    print("üë§ –õ–æ–≥–∏–Ω: admin, –ü–∞—Ä–æ–ª—å: admin123")


if __name__ == '__main__':
    create_qc_test_data() 