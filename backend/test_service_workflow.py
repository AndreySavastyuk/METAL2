#!/usr/bin/env python
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ Service Layer –¥–ª—è workflow –∏–Ω—Å–ø–µ–∫—Ü–∏–∏ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
"""
import os
import sys
import django
import json
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from django.contrib.auth.models import User
from apps.warehouse.models import Material, MaterialReceipt
from apps.warehouse.services import (
    MaterialInspectionService, MaterialService, NotificationService
)
from apps.quality.models import QCInspection
from apps.laboratory.models import LabTestRequest


def test_ppsd_and_ultrasonic_requirements():
    """–¢–µ—Å—Ç –ø—Ä–æ–≤–µ—Ä–∫–∏ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –ü–ü–°–î –∏ –£–ó–ö"""
    
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–†–û–í–ï–†–ö–ò –¢–†–ï–ë–û–í–ê–ù–ò–ô –ü–ü–°–î –ò –£–ó–ö")
    print("=" * 60)
    
    # –¢–µ—Å—Ç–æ–≤—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ —Ä–∞–∑–º–µ—Ä—ã
    test_cases = [
        ('12X18H10T', '‚åÄ150', '–ù–µ—Ä–∂–∞–≤–µ—é—â–∞—è —Å—Ç–∞–ª—å, —Å—Ä–µ–¥–Ω–∏–π –¥–∏–∞–º–µ—Ç—Ä'),
        ('40X', '‚åÄ250', '–ö–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–æ–Ω–Ω–∞—è —Å—Ç–∞–ª—å, –±–æ–ª—å—à–æ–π –¥–∏–∞–º–µ—Ç—Ä'),
        ('20X13', '–ª–∏—Å—Ç 15–º–º', '–ù–µ—Ä–∂–∞–≤–µ—é—â–∞—è —Å—Ç–∞–ª—å, —Å—Ä–µ–¥–Ω—è—è —Ç–æ–ª—â–∏–Ω–∞'),
        ('09–ì2–°', '‚åÄ80', '–ö–æ–Ω—Å—Ç—Ä—É–∫—Ü–∏–æ–Ω–Ω–∞—è —Å—Ç–∞–ª—å, –±–æ–ª—å—à–æ–π –¥–∏–∞–º–µ—Ç—Ä'),
        ('12X18H10T', '–ª–∏—Å—Ç 60–º–º', '–ù–µ—Ä–∂–∞–≤–µ—é—â–∞—è —Å—Ç–∞–ª—å, –±–æ–ª—å—à–∞—è —Ç–æ–ª—â–∏–Ω–∞'),
    ]
    
    for material_grade, size, description in test_cases:
        print(f"\nüìã –¢–µ—Å—Ç: {description}")
        print(f"   –ú–∞—Ç–µ—Ä–∏–∞–ª: {material_grade}, —Ä–∞–∑–º–µ—Ä: {size}")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –ü–ü–°–î
        ppsd_response = MaterialInspectionService.check_ppsd_requirement(material_grade, size)
        if ppsd_response.success:
            requires_ppsd = ppsd_response.data['requires_ppsd']
            reasons = ppsd_response.data.get('reasons', [])
            
            print(f"   –ü–ü–°–î: {'‚úÖ –¢—Ä–µ–±—É–µ—Ç—Å—è' if requires_ppsd else '‚ùå –ù–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è'}")
            if reasons:
                for reason in reasons:
                    print(f"     ‚Ä¢ {reason}")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –ü–ü–°–î: {ppsd_response.error}")
        
        # –ü—Ä–æ–≤–µ—Ä–∫–∞ –£–ó–ö
        ultrasonic_response = MaterialInspectionService.check_ultrasonic_requirement(material_grade, size)
        if ultrasonic_response.success:
            requires_ultrasonic = ultrasonic_response.data['requires_ultrasonic']
            reasons = ultrasonic_response.data.get('reasons', [])
            
            print(f"   –£–ó–ö: {'‚úÖ –¢—Ä–µ–±—É–µ—Ç—Å—è' if requires_ultrasonic else '‚ùå –ù–µ —Ç—Ä–µ–±—É–µ—Ç—Å—è'}")
            if reasons:
                for reason in reasons:
                    print(f"     ‚Ä¢ {reason}")
        else:
            print(f"   ‚ùå –û—à–∏–±–∫–∞ –£–ó–ö: {ultrasonic_response.error}")


def test_material_receipt_workflow():
    """–¢–µ—Å—Ç –ø–æ–ª–Ω–æ–≥–æ workflow –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–∞"""
    
    print(f"\nüîÑ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï WORKFLOW –ü–û–°–¢–£–ü–õ–ï–ù–ò–Ø –ú–ê–¢–ï–†–ò–ê–õ–ê")
    print("=" * 60)
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    try:
        warehouse_user = User.objects.get(username='warehouse_operator')
        qc_inspector = User.objects.get(username='qc_inspector')
    except User.DoesNotExist as e:
        print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –Ω–µ –Ω–∞–π–¥–µ–Ω: {e}")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º –º–∞—Ç–µ—Ä–∏–∞–ª –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    try:
        material = Material.objects.filter(is_deleted=False).first()
        if not material:
            print("‚ùå –ù–µ—Ç –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è")
            return
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–∞: {e}")
        return
    
    print(f"üì¶ –¢–µ—Å—Ç–æ–≤—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª: {material.material_grade} - {material.supplier}")
    
    # –®–∞–≥ 1: –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–∞
    print(f"\n1Ô∏è‚É£ –û–±—Ä–∞–±–æ—Ç–∫–∞ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–∞...")
    
    document_number = f"DOC-SERVICE-TEST-{datetime.now().strftime('%H%M%S')}"
    service_response = MaterialService.process_material_receipt(
        material_id=material.id,
        received_by=warehouse_user,
        document_number=document_number,
        auto_create_qc=True
    )
    
    if not service_response.success:
        print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±—Ä–∞–±–æ—Ç–∫–∏ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏—è: {service_response.error}")
        return
    
    print("‚úÖ –ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ –æ–±—Ä–∞–±–æ—Ç–∞–Ω–æ —É—Å–ø–µ—à–Ω–æ")
    print(f"   üìã ID –ø—Ä–∏–µ–º–∫–∏: {service_response.data['receipt_id']}")
    print(f"   üìÑ –î–æ–∫—É–º–µ–Ω—Ç: {service_response.data['document_number']}")
    print(f"   üìä –°—Ç–∞—Ç—É—Å: {service_response.data['status']}")
    
    if 'qc_inspection' in service_response.data:
        inspection_data = service_response.data['qc_inspection']
        inspection_id = inspection_data['inspection_id']
        print(f"   üîç –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏ —Å–æ–∑–¥–∞–Ω–∞ –∏–Ω—Å–ø–µ–∫—Ü–∏—è –û–¢–ö: #{inspection_id}")
        print(f"   üë§ –ò–Ω—Å–ø–µ–∫—Ç–æ—Ä: {inspection_data['inspector']['username']}")
        print(f"   üß™ –ü–ü–°–î: {'–î–∞' if inspection_data['requires_ppsd'] else '–ù–µ—Ç'}")
        print(f"   üì° –£–ó–ö: {'–î–∞' if inspection_data['requires_ultrasonic'] else '–ù–µ—Ç'}")
        
        if service_response.warnings:
            print("   ‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏—è:")
            for warning in service_response.warnings:
                print(f"     ‚Ä¢ {warning}")
    
    elif 'qc_warning' in service_response.data:
        print(f"‚ö†Ô∏è –ü—Ä–µ–¥—É–ø—Ä–µ–∂–¥–µ–Ω–∏–µ –û–¢–ö: {service_response.data['qc_warning']}")


def test_business_rules():
    """–¢–µ—Å—Ç –±–∏–∑–Ω–µ—Å-–ø—Ä–∞–≤–∏–ª"""
    
    print(f"\nüìã –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ë–ò–ó–ù–ï–°-–ü–†–ê–í–ò–õ")
    print("=" * 60)
    
    # –¢–µ—Å—Ç 1: –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–∞–∑–º–µ—Ä–æ–≤ –¥–ª—è –£–ó–ö
    print("1Ô∏è‚É£ –ú–∞—Ç—Ä–∏—Ü–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –£–ó–ö:")
    ultrasonic_tests = [
        ('40X', '‚åÄ75'),      # –î–æ–ª–∂–µ–Ω —Ç—Ä–µ–±–æ–≤–∞—Ç—å –£–ó–ö (50-100, –≤–∫–ª—é—á–∞–µ—Ç 40X)
        ('40X', '‚åÄ150'),     # –î–æ–ª–∂–µ–Ω —Ç—Ä–µ–±–æ–≤–∞—Ç—å –£–ó–ö (100-200, –≤–∫–ª—é—á–∞–µ—Ç 40X)
        ('40X', '‚åÄ300'),     # –î–æ–ª–∂–µ–Ω —Ç—Ä–µ–±–æ–≤–∞—Ç—å –£–ó–ö (200-500, –≤—Å–µ –º–∞—Ä–∫–∏)
        ('ST3', '‚åÄ75'),      # –ù–µ –¥–æ–ª–∂–µ–Ω —Ç—Ä–µ–±–æ–≤–∞—Ç—å –£–ó–ö (–Ω–µ –≤ —Å–ø–∏—Å–∫–µ –¥–ª—è 50-100)
        ('20X13', '–ª–∏—Å—Ç 15–º–º'), # –î–æ–ª–∂–µ–Ω —Ç—Ä–µ–±–æ–≤–∞—Ç—å –£–ó–ö (10-20, –≤–∫–ª—é—á–∞–µ—Ç 20X13)
        ('ST3', '–ª–∏—Å—Ç 15–º–º'),   # –ù–µ –¥–æ–ª–∂–µ–Ω —Ç—Ä–µ–±–æ–≤–∞—Ç—å –£–ó–ö (–Ω–µ –≤ —Å–ø–∏—Å–∫–µ)
    ]
    
    for grade, size in ultrasonic_tests:
        response = MaterialInspectionService.check_ultrasonic_requirement(grade, size)
        if response.success:
            requires = response.data['requires_ultrasonic']
            print(f"   {grade} {size}: {'‚úÖ –£–ó–ö' if requires else '‚ùå –ù–µ—Ç –£–ó–ö'}")
        else:
            print(f"   {grade} {size}: ‚ùå –û—à–∏–±–∫–∞")
    
    # –¢–µ—Å—Ç 2: –ü—Ä–æ–≤–µ—Ä–∫–∞ –º–∞—Ä–æ–∫ –¥–ª—è –ü–ü–°–î
    print("\n2Ô∏è‚É£ –ú–∞—Ç–µ—Ä–∏–∞–ª—ã, —Ç—Ä–µ–±—É—é—â–∏–µ –ü–ü–°–î:")
    ppsd_tests = [
        '12X18H10T',  # –î–æ–ª–∂–µ–Ω —Ç—Ä–µ–±–æ–≤–∞—Ç—å –ü–ü–°–î
        '20X13',      # –î–æ–ª–∂–µ–Ω —Ç—Ä–µ–±–æ–≤–∞—Ç—å –ü–ü–°–î
        '40X',        # –ù–µ –¥–æ–ª–∂–µ–Ω —Ç—Ä–µ–±–æ–≤–∞—Ç—å –ü–ü–°–î
        '09–ì2–°',      # –ù–µ –¥–æ–ª–∂–µ–Ω —Ç—Ä–µ–±–æ–≤–∞—Ç—å –ü–ü–°–î
    ]
    
    for grade in ppsd_tests:
        response = MaterialInspectionService.check_ppsd_requirement(grade)
        if response.success:
            requires = response.data['requires_ppsd']
            print(f"   {grade}: {'‚úÖ –ü–ü–°–î' if requires else '‚ùå –ù–µ—Ç –ü–ü–°–î'}")
        else:
            print(f"   {grade}: ‚ùå –û—à–∏–±–∫–∞")


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    print("üöÄ –ö–û–ú–ü–õ–ï–ö–°–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï SERVICE LAYER")
    print("=" * 80)
    
    try:
        # –û—Å–Ω–æ–≤–Ω—ã–µ —Ç–µ—Å—Ç—ã
        test_ppsd_and_ultrasonic_requirements()
        test_material_receipt_workflow()
        
        # –¢–µ—Å—Ç—ã –Ω–∞–¥–µ–∂–Ω–æ—Å—Ç–∏
        test_business_rules()
        
        print(f"\n{'=' * 80}")
        print("üéâ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï SERVICE LAYER –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û!")
        print("=" * 80)
        
        print("\n‚úÖ –ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:")
        print("   üîç MaterialInspectionService.check_ppsd_requirement()")
        print("   üì° MaterialInspectionService.check_ultrasonic_requirement()")
        print("   üîÑ MaterialInspectionService.create_inspection()")
        print("   üìä MaterialInspectionService.transition_status()")
        print("   üß™ MaterialInspectionService.assign_to_laboratory()")
        print("   üì¶ MaterialService.process_material_receipt()")
        print("   üì® NotificationService.send_status_change_notification()")
        
        print("\nüéØ –ë–∏–∑–Ω–µ—Å-–ø—Ä–∞–≤–∏–ª–∞:")
        print("   ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —Å–æ–∑–¥–∞–Ω–∏–µ –∏–Ω—Å–ø–µ–∫—Ü–∏–∏ –û–¢–ö –ø—Ä–∏ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–∏")
        print("   ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –ü–ü–°–î –ø–æ –º–∞—Ä–∫–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞")
        print("   ‚úÖ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ç—Ä–µ–±–æ–≤–∞–Ω–∏–π –£–ó–ö –ø–æ –º–∞—Ç—Ä–∏—Ü–µ —Ä–∞–∑–º–µ—Ä/–º–∞—Ä–∫–∞")
        print("   ‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –ø–µ—Ä–µ—Ö–æ–¥–æ–≤ —Å—Ç–∞—Ç—É—Å–æ–≤ (–Ω–µ–ª—å–∑—è –ø—Ä–æ–ø—É—Å–∫–∞—Ç—å —ç—Ç–∞–ø—ã)")
        print("   ‚úÖ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ –Ω–∞–∑–Ω–∞—á–µ–Ω–∏–µ –≤ –ª–∞–±–æ—Ä–∞—Ç–æ—Ä–∏—é –ø—Ä–∏ –∑–∞–≤–µ—Ä—à–µ–Ω–∏–∏")
        print("   ‚úÖ –û—Ç–ø—Ä–∞–≤–∫–∞ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ —Å—Ç–∞—Ç—É—Å–∞")
        
        print("\nüõ°Ô∏è –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ—à–∏–±–æ–∫:")
        print("   ‚úÖ @transaction.atomic –¥–ª—è –∫–æ–Ω—Å–∏—Å—Ç–µ–Ω—Ç–Ω–æ—Å—Ç–∏ –¥–∞–Ω–Ω—ã—Ö")
        print("   ‚úÖ –°—Ç–∞–Ω–¥–∞—Ä—Ç–∏–∑–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–æ–≤ (ServiceResponse)")
        print("   ‚úÖ –ü–æ–¥—Ä–æ–±–Ω–æ–µ –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ –≤—Å–µ—Ö –æ–ø–µ—Ä–∞—Ü–∏–π")
        print("   ‚úÖ –í–∞–ª–∏–¥–∞—Ü–∏—è –≤—Ö–æ–¥–Ω—ã—Ö –¥–∞–Ω–Ω—ã—Ö")
        
        print("\nüåê Service Layer –≥–æ—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!")
        
    except Exception as e:
        print(f"\n‚ùå –ö–†–ò–¢–ò–ß–ï–°–ö–ê–Ø –û–®–ò–ë–ö–ê: {e}")
        import traceback
        traceback.print_exc()


if __name__ == '__main__':
    main()