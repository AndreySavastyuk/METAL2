#!/usr/bin/env python
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –º–æ–¥—É–ª—è —Å–∫–ª–∞–¥–∞
"""
import os
import sys
import django

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from django.contrib.auth.models import User
from apps.warehouse.models import Material, MaterialReceipt, Certificate
from decimal import Decimal


def create_test_data():
    """–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö"""
    
    print("–°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –º–æ–¥—É–ª—è —Å–∫–ª–∞–¥–∞...")
    
    # –ü–æ–ª—É—á–∞–µ–º –∏–ª–∏ —Å–æ–∑–¥–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π
    admin_user, created = User.objects.get_or_create(
        username='admin',
        defaults={
            'email': 'admin@metalqms.local',
            'is_staff': True,
            'is_superuser': True
        }
    )
    
    warehouse_user, created = User.objects.get_or_create(
        username='warehouse_operator',
        defaults={
            'email': 'warehouse@metalqms.local',
            'first_name': '–ò–≤–∞–Ω',
            'last_name': '–°–∫–ª–∞–¥—Å–∫–æ–π'
        }
    )
    
    print(f"–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–∏ –≥–æ—Ç–æ–≤—ã: {admin_user.username}, {warehouse_user.username}")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–µ –º–∞—Ç–µ—Ä–∏–∞–ª—ã
    test_materials = [
        {
            'material_grade': '40X',
            'supplier': '–ú–µ—Ç–∞–ª–ª–¢–æ—Ä–≥',
            'order_number': '–ó–ö-2024-001',
            'certificate_number': '–°–¢-40X-240115',
            'heat_number': '–ü-45789',
            'size': '‚åÄ50x6000',
            'quantity': Decimal('1250.500'),
            'unit': 'kg',
            'location': '–°—Ç–µ–ª–ª–∞–∂ –ê-1-3'
        },
        {
            'material_grade': '20X13',
            'supplier': '–°–ø–µ—Ü–°—Ç–∞–ª—å',
            'order_number': '–ó–ö-2024-002',
            'certificate_number': '–°–¢-20X13-240116',
            'heat_number': '–ü-45790',
            'size': '‚åÄ100x3000',
            'quantity': Decimal('850.750'),
            'unit': 'kg',
            'location': '–°—Ç–µ–ª–ª–∞–∂ –ë-2-1'
        },
        {
            'material_grade': '12X18H10T',
            'supplier': '–£—Ä–∞–ª–ú–µ—Ç',
            'order_number': '–ó–ö-2024-003',
            'certificate_number': '–°–¢-12X18H10T-240117',
            'heat_number': '–ü-45791',
            'size': '–õ–∏—Å—Ç 10x1500x6000',
            'quantity': Decimal('25'),
            'unit': 'pcs',
            'location': '–ü–ª–æ—â–∞–¥–∫–∞ –í-1'
        },
        {
            'material_grade': '09–ì2–°',
            'supplier': '–ú–µ—Ç–∞–ª–ª–¢–æ—Ä–≥',
            'order_number': '–ó–ö-2024-004',
            'certificate_number': '–°–¢-09–ì2–°-240118',
            'heat_number': '–ü-45792',
            'size': '‚åÄ150x12000',
            'quantity': Decimal('2100.000'),
            'unit': 'meters',
            'location': '–°—Ç–µ–ª–ª–∞–∂ –ì-1-5'
        }
    ]
    
    created_materials = []
    
    for material_data in test_materials:
        material, created = Material.objects.get_or_create(
            certificate_number=material_data['certificate_number'],
            defaults={
                **material_data,
                'created_by': admin_user,
                'updated_by': admin_user
            }
        )
        created_materials.append(material)
        
        if created:
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω –º–∞—Ç–µ—Ä–∏–∞–ª: {material}")
            
            # –°–æ–∑–¥–∞–µ–º –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ –¥–ª—è –∫–∞–∂–¥–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞
            receipt, receipt_created = MaterialReceipt.objects.get_or_create(
                material=material,
                document_number=f"–ü–ù-{material_data['order_number'][-3:]}",
                defaults={
                    'received_by': warehouse_user,
                    'status': 'pending_qc',
                    'notes': f'–ü–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞ {material.material_grade} –æ—Ç {material.supplier}',
                    'created_by': warehouse_user,
                    'updated_by': warehouse_user
                }
            )
            
            if receipt_created:
                print(f"  üìÑ –°–æ–∑–¥–∞–Ω–æ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–µ: {receipt}")
        else:
            print(f"‚ö†Ô∏è  –ú–∞—Ç–µ—Ä–∏–∞–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {material}")
    
    print(f"\n‚úÖ –°–æ–∑–¥–∞–Ω–æ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤: {len(created_materials)}")
    
    # –í—ã–≤–æ–¥–∏–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É
    print("\nüìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"–í—Å–µ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤: {Material.objects.count()}")
    print(f"–í—Å–µ–≥–æ –ø–æ—Å—Ç—É–ø–ª–µ–Ω–∏–π: {MaterialReceipt.objects.count()}")
    print(f"–í—Å–µ–≥–æ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤: {Certificate.objects.count()}")
    
    # –í—ã–≤–æ–¥–∏–º –ø—Ä–∏–º–µ—Ä—ã QR –∫–æ–¥–æ–≤
    print("\nüîó QR –∫–æ–¥—ã –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤:")
    for material in Material.objects.all()[:2]:
        if material.qr_code:
            print(f"  {material.material_grade}: {material.qr_code.url}")
        else:
            print(f"  {material.material_grade}: QR –∫–æ–¥ –Ω–µ —Å–æ–∑–¥–∞–Ω")
    
    print("\nüéâ –¢–µ—Å—Ç–æ–≤—ã–µ –¥–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!")
    print("üåê –ê–¥–º–∏–Ω–∫–∞ –¥–æ—Å—Ç—É–ø–Ω–∞ –ø–æ –∞–¥—Ä–µ—Å—É: http://127.0.0.1:8003/admin/")
    print("üë§ –õ–æ–≥–∏–Ω: admin, –ü–∞—Ä–æ–ª—å: admin123")


if __name__ == '__main__':
    create_test_data() 