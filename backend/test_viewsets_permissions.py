#!/usr/bin/env python
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ ViewSets —Å —Ä–æ–ª–µ–≤—ã–º–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è–º–∏
"""
import os
import sys
import django
import json
from datetime import datetime

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append(os.path.dirname(os.path.abspath(__file__)))
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from rest_framework.test import APIClient
from django.contrib.auth.models import User
from apps.warehouse.models import Material, MaterialReceipt
from apps.warehouse.permissions import get_user_role


def test_user_permissions(username, password='metalqms123'):
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π –¥–ª—è –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è"""
    
    print(f"\n{'='*60}")
    print(f"üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–û–õ–¨–ó–û–í–ê–¢–ï–õ–Ø: {username}")
    print(f"{'='*60}")
    
    client = APIClient()
    
    # –ü–æ–ª—É—á–∞–µ–º –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    try:
        user = User.objects.get(username=username)
        print(f"üë§ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.get_full_name() or username}")
        print(f"üè∑Ô∏è –†–æ–ª—å: {get_user_role(user)}")
        print(f"üèõÔ∏è –ì—Ä—É–ø–ø—ã: {', '.join(user.groups.values_list('name', flat=True))}")
    except User.DoesNotExist:
        print(f"‚ùå –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å {username} –Ω–µ –Ω–∞–π–¥–µ–Ω")
        return
    
    # –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è
    client.force_authenticate(user=user)
    
    # –¢–µ—Å—Ç—ã –¥–ª—è –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
    print(f"\nüì¶ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï API –ú–ê–¢–ï–†–ò–ê–õ–û–í")
    print("-" * 40)
    
    # 1. –ß—Ç–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤
    response = client.get('/api/v1/warehouse/materials/')
    print(f"GET /materials/: {response.status_code} {'‚úÖ' if response.status_code == 200 else '‚ùå'}")
    
    if response.status_code == 200:
        data = response.json()
        print(f"  –ù–∞–π–¥–µ–Ω–æ –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤: {len(data.get('results', []))}")
        if 'user_info' in data:
            user_info = data['user_info']
            print(f"  –†–æ–ª—å –≤ –æ—Ç–≤–µ—Ç–µ: {user_info.get('role')}")
            print(f"  –ü—Ä–∞–≤–∞: —Å–æ–∑–¥–∞–Ω–∏–µ={user_info['permissions']['can_create']}, "
                  f"—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ={user_info['permissions']['can_edit']}, "
                  f"—É–¥–∞–ª–µ–Ω–∏–µ={user_info['permissions']['can_delete']}")
    
    # 2. –°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Ç–µ—Ä–∏–∞–ª–∞
    material_data = {
        'material_grade': f'TEST-{username}-{datetime.now().strftime("%H%M%S")}',
        'supplier': f'–ü–æ—Å—Ç–∞–≤—â–∏–∫ –¥–ª—è {username}',
        'order_number': f'ORDER-{username}',
        'certificate_number': f'CERT-{username}-{datetime.now().strftime("%Y%m%d%H%M%S")}',
        'heat_number': 'HEAT-12345',
        'size': '‚åÄ50',
        'quantity': 100.0,
        'unit': 'kg',
        'location': '–¢–µ—Å—Ç–æ–≤–∞—è –∑–æ–Ω–∞'
    }
    
    response = client.post(
        '/api/v1/warehouse/materials/',
        data=json.dumps(material_data),
        content_type='application/json'
    )
    print(f"POST /materials/: {response.status_code} {'‚úÖ' if response.status_code == 201 else '‚ùå'}")
    
    created_material_id = None
    if response.status_code == 201:
        created = response.json()
        created_material_id = created['id']
        print(f"  –°–æ–∑–¥–∞–Ω –º–∞—Ç–µ—Ä–∏–∞–ª ID: {created_material_id}")
    elif response.status_code == 403:
        print(f"  ‚ö†Ô∏è –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω (–æ–∂–∏–¥–∞–µ–º–æ –¥–ª—è –Ω–µ-—Å–∫–ª–∞–¥—Å–∫–∏—Ö —Ä–æ–ª–µ–π)")
    else:
        print(f"  ‚ùå –û—à–∏–±–∫–∞: {response.json()}")
    
    # 3. –ì–µ–Ω–µ—Ä–∞—Ü–∏—è QR –∫–æ–¥–∞ (–µ—Å–ª–∏ –º–∞—Ç–µ—Ä–∏–∞–ª —Å–æ–∑–¥–∞–Ω)
    if created_material_id:
        response = client.post(f'/api/v1/warehouse/materials/{created_material_id}/generate_qr_code/')
        print(f"POST /materials/{created_material_id}/generate_qr_code/: {response.status_code} {'‚úÖ' if response.status_code == 200 else '‚ùå'}")
        
        if response.status_code == 200:
            qr_data = response.json()
            print(f"  QR –∫–æ–¥ —Å–≥–µ–Ω–µ—Ä–∏—Ä–æ–≤–∞–Ω: {qr_data.get('qr_code_url', 'N/A')}")
    
    # 4. –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞
    response = client.get('/api/v1/warehouse/materials/statistics/')
    print(f"GET /materials/statistics/: {response.status_code} {'‚úÖ' if response.status_code == 200 else '‚ùå'}")
    
    # –¢–µ—Å—Ç—ã –¥–ª—è –ø—Ä–∏–µ–º–æ–∫
    print(f"\nüìã –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï API –ü–†–ò–ï–ú–û–ö")
    print("-" * 40)
    
    # 1. –ß—Ç–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –ø—Ä–∏–µ–º–æ–∫
    response = client.get('/api/v1/warehouse/receipts/')
    print(f"GET /receipts/: {response.status_code} {'‚úÖ' if response.status_code == 200 else '‚ùå'}")
    
    if response.status_code == 200:
        data = response.json()
        print(f"  –ù–∞–π–¥–µ–Ω–æ –ø—Ä–∏–µ–º–æ–∫: {len(data.get('results', []))}")
    
    # 2. –°–æ–∑–¥–∞–Ω–∏–µ –ø—Ä–∏–µ–º–∫–∏ (–µ—Å–ª–∏ –µ—Å—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª)
    if created_material_id:
        receipt_data = {
            'material_id': created_material_id,
            'document_number': f'DOC-{username}-{datetime.now().strftime("%H%M%S")}',
            'status': 'pending_qc',
            'notes': f'–ü—Ä–∏–µ–º–∫–∞ —Å–æ–∑–¥–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {username}'
        }
        
        response = client.post(
            '/api/v1/warehouse/receipts/',
            data=json.dumps(receipt_data),
            content_type='application/json'
        )
        print(f"POST /receipts/: {response.status_code} {'‚úÖ' if response.status_code == 201 else '‚ùå'}")
        
        created_receipt_id = None
        if response.status_code == 201:
            created_receipt = response.json()
            created_receipt_id = created_receipt['id']
            print(f"  –°–æ–∑–¥–∞–Ω–∞ –ø—Ä–∏–µ–º–∫–∞ ID: {created_receipt_id}")
        elif response.status_code == 403:
            print(f"  ‚ö†Ô∏è –î–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω (–æ–∂–∏–¥–∞–µ–º–æ –¥–ª—è –Ω–µ-—Å–∫–ª–∞–¥—Å–∫–∏—Ö —Ä–æ–ª–µ–π)")
        
        # 3. –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å—Ç–∞—Ç—É—Å–∞ –ø—Ä–∏–µ–º–∫–∏
        if created_receipt_id:
            status_data = {
                'status': 'in_qc',
                'comment': f'–ü–µ—Ä–µ–≤–µ–¥–µ–Ω–æ –≤ –û–¢–ö –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º {username}'
            }
            response = client.post(
                f'/api/v1/warehouse/receipts/{created_receipt_id}/transition_status/',
                data=json.dumps(status_data),
                content_type='application/json'
            )
            print(f"POST /receipts/{created_receipt_id}/transition_status/: {response.status_code} {'‚úÖ' if response.status_code == 200 else '‚ùå'}")
            
            if response.status_code == 200:
                transition = response.json()
                print(f"  –°—Ç–∞—Ç—É—Å –∏–∑–º–µ–Ω–µ–Ω: {transition['transition']['from']} ‚Üí {transition['transition']['to']}")
    
    # 4. –ü—Ä–∏–µ–º–∫–∏ –≤ –æ–∂–∏–¥–∞–Ω–∏–∏ –û–¢–ö
    response = client.get('/api/v1/warehouse/receipts/pending_qc/')
    print(f"GET /receipts/pending_qc/: {response.status_code} {'‚úÖ' if response.status_code == 200 else '‚ùå'}")
    
    # –¢–µ—Å—Ç—ã –¥–ª—è —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
    print(f"\nüìÑ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï API –°–ï–†–¢–ò–§–ò–ö–ê–¢–û–í")
    print("-" * 40)
    
    # 1. –ß—Ç–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–æ–≤
    response = client.get('/api/v1/warehouse/certificates/')
    print(f"GET /certificates/: {response.status_code} {'‚úÖ' if response.status_code == 200 else '‚ùå'}")
    
    # –¢–µ—Å—Ç—ã –æ—Ç—á–µ—Ç–æ–≤
    print(f"\nüìä –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï API –û–¢–ß–ï–¢–û–í")
    print("-" * 40)
    
    # 1. –°–≤–æ–¥–Ω—ã–π –æ—Ç—á–µ—Ç
    response = client.get('/api/v1/warehouse/reports/inventory_summary/')
    print(f"GET /reports/inventory_summary/: {response.status_code} {'‚úÖ' if response.status_code == 200 else '‚ùå'}")
    
    return {
        'username': username,
        'role': get_user_role(user),
        'can_create_materials': created_material_id is not None,
        'can_access_reports': response.status_code == 200
    }


def test_role_based_access():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–æ—Å—Ç—É–ø–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ä–æ–ª–µ–π"""
    
    print("üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –†–û–õ–ï–í–´–• –†–ê–ó–†–ï–®–ï–ù–ò–ô API")
    print("="*80)
    
    # –°–ø–∏—Å–æ–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
    test_users = [
        'admin',
        'warehouse_operator', 
        'qc_inspector',
        'lab_manager'
    ]
    
    results = []
    
    for username in test_users:
        try:
            result = test_user_permissions(username)
            results.append(result)
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–∏ {username}: {e}")
    
    # –ò—Ç–æ–≥–æ–≤–∞—è —Ç–∞–±–ª–∏—Ü–∞
    print(f"\n{'='*80}")
    print("üìä –ò–¢–û–ì–û–í–ê–Ø –¢–ê–ë–õ–ò–¶–ê –†–ê–ó–†–ï–®–ï–ù–ò–ô")
    print(f"{'='*80}")
    
    print(f"{'–ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å':<20} {'–†–æ–ª—å':<12} {'–°–æ–∑–¥–∞–Ω–∏–µ':<10} {'–û—Ç—á–µ—Ç—ã':<8}")
    print("-" * 80)
    
    for result in results:
        username = result['username']
        role = result['role']
        can_create = '‚úÖ' if result['can_create_materials'] else '‚ùå'
        can_reports = '‚úÖ' if result['can_access_reports'] else '‚ùå'
        
        print(f"{username:<20} {role:<12} {can_create:<10} {can_reports:<8}")
    
    print(f"\n{'='*80}")
    print("üìã –í–´–í–û–î–´:")
    print("‚úÖ admin - –ø–æ–ª–Ω—ã–π –¥–æ—Å—Ç—É–ø –∫–æ –≤—Å–µ–º —Ñ—É–Ω–∫—Ü–∏—è–º")
    print("‚úÖ warehouse_operator - –º–æ–∂–µ—Ç —Å–æ–∑–¥–∞–≤–∞—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ –ø—Ä–∏–µ–º–∫–∏")
    print("‚úÖ qc_inspector - –º–æ–∂–µ—Ç —á–∏—Ç–∞—Ç—å –∏ –∏–∑–º–µ–Ω—è—Ç—å —Å—Ç–∞—Ç—É—Å—ã –ø—Ä–∏–µ–º–æ–∫")
    print("‚úÖ lab_manager - –º–æ–∂–µ—Ç —á–∏—Ç–∞—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª—ã –∏ —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Å–µ—Ä—Ç–∏—Ñ–∏–∫–∞—Ç–∞–º–∏")
    print("üîí –†–∞–∑—Ä–µ—à–µ–Ω–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")


def test_permission_edge_cases():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥—Ä–∞–Ω–∏—á–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏–π"""
    
    print(f"\n{'='*80}")
    print("üîç –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ì–†–ê–ù–ò–ß–ù–´–• –°–õ–£–ß–ê–ï–í")
    print(f"{'='*80}")
    
    # –¢–µ—Å—Ç –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞
    print("\n1. –¢–µ—Å—Ç –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞:")
    client = APIClient()  # –ë–µ–∑ –∞—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏–∏
    
    response = client.get('/api/v1/warehouse/materials/')
    print(f"   GET /materials/ –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {response.status_code} {'‚úÖ' if response.status_code == 401 else '‚ùå'}")
    
    response = client.post('/api/v1/warehouse/materials/', data={})
    print(f"   POST /materials/ –±–µ–∑ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏–∏: {response.status_code} {'‚úÖ' if response.status_code == 401 else '‚ùå'}")
    
    # –¢–µ—Å—Ç QC –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è –ø—ã—Ç–∞—é—â–µ–≥–æ—Å—è —Å–æ–∑–¥–∞—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª
    print("\n2. –¢–µ—Å—Ç –û–¢–ö –ø—ã—Ç–∞–µ—Ç—Å—è —Å–æ–∑–¥–∞—Ç—å –º–∞—Ç–µ—Ä–∏–∞–ª:")
    qc_user = User.objects.get(username='qc_inspector')
    client.force_authenticate(user=qc_user)
    
    material_data = {
        'material_grade': 'FORBIDDEN-TEST',
        'supplier': 'Test Supplier',
        'quantity': 100,
        'unit': 'kg'
    }
    
    response = client.post(
        '/api/v1/warehouse/materials/',
        data=json.dumps(material_data),
        content_type='application/json'
    )
    print(f"   POST /materials/ –æ—Ç –û–¢–ö: {response.status_code} {'‚úÖ' if response.status_code == 403 else '‚ùå'}")
    
    # –¢–µ—Å—Ç –ª–∞–±–æ—Ä–∞–Ω—Ç–∞ –ø—ã—Ç–∞—é—â–µ–≥–æ—Å—è —Å–æ–∑–¥–∞—Ç—å –ø—Ä–∏–µ–º–∫—É
    print("\n3. –¢–µ—Å—Ç –ª–∞–±–æ—Ä–∞–Ω—Ç –ø—ã—Ç–∞–µ—Ç—Å—è —Å–æ–∑–¥–∞—Ç—å –ø—Ä–∏–µ–º–∫—É:")
    lab_user = User.objects.get(username='lab_manager')
    client.force_authenticate(user=lab_user)
    
    # –ü–æ–ª—É—á–∞–µ–º –ª—é–±–æ–π –º–∞—Ç–µ—Ä–∏–∞–ª
    material = Material.objects.filter(is_deleted=False).first()
    if material:
        receipt_data = {
            'material_id': material.id,
            'document_number': 'FORBIDDEN-RECEIPT',
            'status': 'pending_qc'
        }
        
        response = client.post(
            '/api/v1/warehouse/receipts/',
            data=json.dumps(receipt_data),
            content_type='application/json'
        )
        print(f"   POST /receipts/ –æ—Ç –ª–∞–±–æ—Ä–∞–Ω—Ç–∞: {response.status_code} {'‚úÖ' if response.status_code == 403 else '‚ùå'}")
    
    print("\n‚úÖ –í—Å–µ –≥—Ä–∞–Ω–∏—á–Ω—ã–µ —Å–ª—É—á–∞–∏ –æ–±—Ä–∞–±–æ—Ç–∞–Ω—ã –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")


def test_pagination_and_filtering():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏"""
    
    print(f"\n{'='*80}")
    print("üìÑ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ü–ê–ì–ò–ù–ê–¶–ò–ò –ò –§–ò–õ–¨–¢–†–ê–¶–ò–ò")
    print(f"{'='*80}")
    
    # –ê—É—Ç–µ–Ω—Ç–∏—Ñ–∏–∫–∞—Ü–∏—è –∫–∞–∫ –∞–¥–º–∏–Ω
    admin_user = User.objects.get(username='admin')
    client = APIClient()
    client.force_authenticate(user=admin_user)
    
    # –¢–µ—Å—Ç –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
    print("\n1. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ (page_size=2):")
    response = client.get('/api/v1/warehouse/materials/?page_size=2')
    print(f"   GET /materials/?page_size=2: {response.status_code}")
    
    if response.status_code == 200:
        data = response.json()
        print(f"   –†–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü–µ: {len(data.get('results', []))}")
        print(f"   –û–±—â–µ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ: {data.get('count', 0)}")
        print(f"   –ï—Å—Ç—å —Å–ª–µ–¥—É—é—â–∞—è —Å—Ç—Ä–∞–Ω–∏—Ü–∞: {'–î–∞' if data.get('next') else '–ù–µ—Ç'}")
    
    # –¢–µ—Å—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –µ–¥–∏–Ω–∏—Ü–∞–º –∏–∑–º–µ—Ä–µ–Ω–∏—è
    print("\n2. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø–æ –µ–¥–∏–Ω–∏—Ü–∞–º:")
    response = client.get('/api/v1/warehouse/materials/?unit=kg')
    print(f"   GET /materials/?unit=kg: {response.status_code}")
    
    if response.status_code == 200:
        data = response.json()
        print(f"   –ú–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ –≤ –∫–≥: {len(data.get('results', []))}")
    
    # –¢–µ—Å—Ç –ø–æ–∏—Å–∫–∞
    print("\n3. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–∏—Å–∫–∞:")
    response = client.get('/api/v1/warehouse/materials/?search=40X')
    print(f"   GET /materials/?search=40X: {response.status_code}")
    
    if response.status_code == 200:
        data = response.json()
        print(f"   –ù–∞–π–¥–µ–Ω–æ –ø–æ –ø–æ–∏—Å–∫—É '40X': {len(data.get('results', []))}")
    
    # –¢–µ—Å—Ç —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–∏–µ–º–æ–∫ –ø–æ —Å—Ç–∞—Ç—É—Å—É
    print("\n4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏ –ø—Ä–∏–µ–º–æ–∫:")
    response = client.get('/api/v1/warehouse/receipts/?status=pending_qc')
    print(f"   GET /receipts/?status=pending_qc: {response.status_code}")
    
    if response.status_code == 200:
        data = response.json()
        print(f"   –ü—Ä–∏–µ–º–æ–∫ –≤ –æ–∂–∏–¥–∞–Ω–∏–∏ –û–¢–ö: {len(data.get('results', []))}")
    
    print("\n‚úÖ –ü–∞–≥–∏–Ω–∞—Ü–∏—è –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏—è —Ä–∞–±–æ—Ç–∞—é—Ç –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ!")


def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    
    print("üß™ –ö–û–ú–ü–õ–ï–ö–°–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï VIEWSETS –° –†–ê–ó–†–ï–®–ï–ù–ò–Ø–ú–ò")
    print("="*90)
    
    # –û—Å–Ω–æ–≤–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–æ–ª–µ–π
    test_role_based_access()
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –≥—Ä–∞–Ω–∏—á–Ω—ã—Ö —Å–ª—É—á–∞–µ–≤
    test_permission_edge_cases()
    
    # –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–∞–≥–∏–Ω–∞—Ü–∏–∏ –∏ —Ñ–∏–ª—å—Ç—Ä–∞—Ü–∏–∏
    test_pagination_and_filtering()
    
    print(f"\n{'='*90}")
    print("üéâ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û –£–°–ü–ï–®–ù–û!")
    print("="*90)
    print("\n‚úÖ –ü—Ä–æ–≤–µ—Ä–µ–Ω–Ω—ã–µ —Ñ—É–Ω–∫—Ü–∏–∏:")
    print("   üì¶ MaterialViewSet - –ø–æ–ª–Ω—ã–π CRUD —Å —Ä–æ–ª–µ–≤—ã–º–∏ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è–º–∏")
    print("   üìã MaterialReceiptViewSet - —Å–æ–∑–¥–∞–Ω–∏–µ —Ç–æ–ª—å–∫–æ –¥–ª—è —Å–∫–ª–∞–¥–∞")
    print("   üìÑ CertificateViewSet - —Ä–æ–ª–µ–≤—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è")
    print("   üìä –û—Ç—á–µ—Ç—ã - –¥–æ—Å—Ç—É–ø –¥–ª—è –≤—Å–µ—Ö –∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö")
    print("   üîê –ö–∞—Å—Ç–æ–º–Ω—ã–µ —Ä–∞–∑—Ä–µ—à–µ–Ω–∏—è - IsWarehouseStaff, IsQCInspector, IsLabTechnician")
    print("   üìÑ –ü–∞–≥–∏–Ω–∞—Ü–∏—è 20 —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ —Å—Ç—Ä–∞–Ω–∏—Ü—É")
    print("   üîç –§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –∏ –ø–æ–∏—Å–∫")
    print("   ‚öôÔ∏è –ö–∞—Å—Ç–æ–º–Ω—ã–µ –¥–µ–π—Å—Ç–≤–∏—è - generate_qr_code, transition_status")
    print("   üõ°Ô∏è –ü—Ä–æ–≤–µ—Ä–∫–∞ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏ - –Ω–µ–∞–≤—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–π –¥–æ—Å—Ç—É–ø –∑–∞–ø—Ä–µ—â–µ–Ω")
    
    print("\nüåê API –≥–æ—Ç–æ–≤ –¥–ª—è –ø—Ä–æ–º—ã—à–ª–µ–Ω–Ω–æ–≥–æ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è!")


if __name__ == '__main__':
    main() 