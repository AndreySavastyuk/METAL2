"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è —Å–∏—Å—Ç–µ–º—ã Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
"""
import os
import sys
import django
from django.conf import settings

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ Django
sys.path.append('.')
os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')
django.setup()

from django.contrib.auth.models import User, Group
from apps.notifications.models import UserNotificationPreferences
from apps.notifications.services import telegram_service
from apps.notifications.tasks import test_telegram_connection
from apps.warehouse.models import Material

def create_test_user_with_notifications():
    """–°–æ–∑–¥–∞—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å –Ω–∞—Å—Ç—Ä–æ–π–∫–∞–º–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π"""
    
    # –°–æ–∑–¥–∞–µ–º –≥—Ä—É–ø–ø—ã –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç
    groups = ['QC', 'Laboratory', 'Production', 'Warehouse', 'Administrators']
    for group_name in groups:
        group, created = Group.objects.get_or_create(name=group_name)
        if created:
            print(f"‚úÖ –°–æ–∑–¥–∞–Ω–∞ –≥—Ä—É–ø–ø–∞: {group_name}")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user, created = User.objects.get_or_create(
        username='test_telegram_user',
        defaults={
            'first_name': '–¢–µ—Å—Ç',
            'last_name': '–¢–µ–ª–µ–≥—Ä–∞–º',
            'email': 'test@example.com',
            'is_active': True
        }
    )
    
    if created:
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {user.username}")
    else:
        print(f"üìã –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {user.username}")
    
    # –î–æ–±–∞–≤–ª—è–µ–º –≤ –≥—Ä—É–ø–ø—É QC
    qc_group = Group.objects.get(name='QC')
    user.groups.add(qc_group)
    
    # –°–æ–∑–¥–∞–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π
    preferences, created = UserNotificationPreferences.objects.get_or_create(
        user=user,
        defaults={
            'telegram_chat_id': '',  # –ù—É–∂–Ω–æ –±—É–¥–µ—Ç —É–∫–∞–∑–∞—Ç—å –≤—Ä—É—á–Ω—É—é
            'is_telegram_enabled': False,  # –í–∫–ª—é—á–∏—Ç—Å—è –ø–æ—Å–ª–µ —É–∫–∞–∑–∞–Ω–∏—è chat_id
            'notification_types': {
                'status_update': {'enabled': True, 'urgent_only': False},
                'task_assignment': {'enabled': True, 'urgent_only': False},
                'urgent_alert': {'enabled': True, 'urgent_only': False},
                'daily_summary': {'enabled': True, 'urgent_only': False},
            },
            'language': 'ru',
            'timezone': 'Europe/Moscow'
        }
    )
    
    if created:
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω—ã –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –¥–ª—è {user.username}")
    else:
        print(f"üìã –ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É—é—Ç –¥–ª—è {user.username}")
    
    return user, preferences

def test_bot_connection():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ Telegram Bot"""
    print("\nü§ñ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ Telegram Bot...")
    
    if not settings.TELEGRAM_BOT_TOKEN:
        print("‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞—Å—Ç—Ä–æ–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        print("üí° –î–æ–±–∞–≤—å—Ç–µ TELEGRAM_BOT_TOKEN=your_bot_token –≤ .env —Ñ–∞–π–ª")
        return False
    
    try:
        result = test_telegram_connection.delay()
        result_data = result.get(timeout=10)
        
        if result_data['status'] == 'success':
            bot_info = result_data['bot_info']
            print(f"‚úÖ –ë–æ—Ç –ø–æ–¥–∫–ª—é—á–µ–Ω —É—Å–ø–µ—à–Ω–æ:")
            print(f"   ‚Ä¢ Username: @{bot_info['username']}")
            print(f"   ‚Ä¢ Name: {bot_info['first_name']}")
            print(f"   ‚Ä¢ ID: {bot_info['id']}")
            return True
        else:
            print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è: {result_data['message']}")
            return False
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è: {e}")
        return False

def test_notifications_with_mock_material():
    """–¢–µ—Å—Ç–∏—Ä–æ–≤–∞—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è —Å –º–æ–∫-–º–∞—Ç–µ—Ä–∏–∞–ª–æ–º"""
    print("\nüì¶ –°–æ–∑–¥–∞–Ω–∏–µ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –º–∞—Ç–µ—Ä–∏–∞–ª–∞...")
    
    # –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª
    material, created = Material.objects.get_or_create(
        material_grade='40X',
        supplier='–¢–µ—Å—Ç–æ–≤—ã–π –ø–æ—Å—Ç–∞–≤—â–∏–∫',
        certificate_number='TEST-001',
        heat_number='TEST-HEAT-001',
        defaults={
            'size': '‚åÄ100',
            'quantity': 1000,
            'unit': 'kg',
            'order_number': 'ORDER-TEST-001',
            'created_by_id': 1,
            'updated_by_id': 1
        }
    )
    
    if created:
        print(f"‚úÖ –°–æ–∑–¥–∞–Ω —Ç–µ—Å—Ç–æ–≤—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª: {material}")
    else:
        print(f"üìã –¢–µ—Å—Ç–æ–≤—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª —É–∂–µ —Å—É—â–µ—Å—Ç–≤—É–µ—Ç: {material}")
    
    return material

def print_setup_instructions():
    """–í—ã–≤–µ—Å—Ç–∏ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –ø–æ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ"""
    print("\nüìã –ò–ù–°–¢–†–£–ö–¶–ò–ò –ü–û –ù–ê–°–¢–†–û–ô–ö–ï TELEGRAM –£–í–ï–î–û–ú–õ–ï–ù–ò–ô:")
    print("=" * 60)
    
    print("\n1. –°–æ–∑–¥–∞–Ω–∏–µ Telegram –±–æ—Ç–∞:")
    print("   ‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ /start –±–æ—Ç—É @BotFather")
    print("   ‚Ä¢ –û—Ç–ø—Ä–∞–≤—å—Ç–µ /newbot –∏ —Å–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º")
    print("   ‚Ä¢ –°–∫–æ–ø–∏—Ä—É–π—Ç–µ —Ç–æ–∫–µ–Ω –±–æ—Ç–∞")
    print("   ‚Ä¢ –î–æ–±–∞–≤—å—Ç–µ –≤ .env —Ñ–∞–π–ª: TELEGRAM_BOT_TOKEN=your_token_here")
    
    print("\n2. –ü–æ–ª—É—á–µ–Ω–∏–µ Chat ID:")
    print("   ‚Ä¢ –ù–∞–ø–∏—à–∏—Ç–µ —Å–æ–æ–±—â–µ–Ω–∏–µ —Å–≤–æ–µ–º—É –±–æ—Ç—É")
    print("   ‚Ä¢ –ü–µ—Ä–µ–π–¥–∏—Ç–µ –ø–æ —Å—Å—ã–ª–∫–µ:")
    print("     https://api.telegram.org/bot<YOUR_BOT_TOKEN>/getUpdates")
    print("   ‚Ä¢ –ù–∞–π–¥–∏—Ç–µ 'chat':{'id': –í–ê–®–ò_–¶–ò–§–†–´}")
    
    print("\n3. –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –≤ –∞–¥–º–∏–Ω–∫–µ:")
    print("   ‚Ä¢ –í–æ–π–¥–∏—Ç–µ –≤ –∞–¥–º–∏–Ω–∫—É Django")
    print("   ‚Ä¢ –ü–µ—Ä–µ–π–¥–∏—Ç–µ –≤ '–ù–∞—Å—Ç—Ä–æ–π–∫–∏ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π'")
    print("   ‚Ä¢ –ù–∞–π–¥–∏—Ç–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è 'test_telegram_user'")
    print("   ‚Ä¢ –£–∫–∞–∂–∏—Ç–µ Telegram Chat ID")
    print("   ‚Ä¢ –í–∫–ª—é—á–∏—Ç–µ '–í–∫–ª—é—á–∏—Ç—å Telegram —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è'")
    
    print("\n4. –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ:")
    print("   ‚Ä¢ –í –∞–¥–º–∏–Ω–∫–µ –Ω–∞–∂–º–∏—Ç–µ '–û—Ç–ø—Ä–∞–≤–∏—Ç—å —Ç–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ'")
    print("   ‚Ä¢ –ò–ª–∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ: python test_telegram_notifications.py")

def main():
    """–û—Å–Ω–æ–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è"""
    print("üöÄ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´ TELEGRAM –£–í–ï–î–û–ú–õ–ï–ù–ò–ô")
    print("=" * 50)
    
    # 1. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    user, preferences = create_test_user_with_notifications()
    
    # 2. –¢–µ—Å—Ç–∏—Ä—É–µ–º –ø–æ–¥–∫–ª—é—á–µ–Ω–∏–µ –∫ –±–æ—Ç—É
    bot_connected = test_bot_connection()
    
    # 3. –°–æ–∑–¥–∞–µ–º —Ç–µ—Å—Ç–æ–≤—ã–π –º–∞—Ç–µ—Ä–∏–∞–ª
    material = test_notifications_with_mock_material()
    
    # 4. –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞—Å—Ç—Ä–æ–π–∫–∏
    print(f"\n‚öôÔ∏è  –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è {user.username}:")
    print(f"   ‚Ä¢ Chat ID: {preferences.telegram_chat_id or '–ù–ï –£–ö–ê–ó–ê–ù'}")
    print(f"   ‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –≤–∫–ª—é—á–µ–Ω—ã: {preferences.is_telegram_enabled}")
    print(f"   ‚Ä¢ –Ø–∑—ã–∫: {preferences.language}")
    print(f"   ‚Ä¢ –ß–∞—Å–æ–≤–æ–π –ø–æ—è—Å: {preferences.timezone}")
    
    # 5. –¢–µ—Å—Ç–∏—Ä—É–µ–º –æ—Ç–ø—Ä–∞–≤–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è (–µ—Å–ª–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–æ—Ä—Ä–µ–∫—Ç–Ω—ã–µ)
    if bot_connected and preferences.telegram_chat_id and preferences.is_telegram_enabled:
        print(f"\nüì± –û—Ç–ø—Ä–∞–≤–∫–∞ —Ç–µ—Å—Ç–æ–≤–æ–≥–æ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è...")
        try:
            success = telegram_service.send_status_update(
                user_id=user.id,
                material=material,
                old_status='pending_qc',
                new_status='in_qc',
                is_urgent=False
            )
            
            if success:
                print("‚úÖ –¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ!")
                print("üì± –ü—Ä–æ–≤–µ—Ä—å—Ç–µ —Å–≤–æ–π Telegram")
            else:
                print("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ")
                
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ—Ç–ø—Ä–∞–≤–∫–∏: {e}")
    else:
        print("\n‚ö†Ô∏è  –¢–µ—Å—Ç–æ–≤–æ–µ —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –Ω–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ:")
        if not bot_connected:
            print("   ‚Ä¢ –ë–æ—Ç –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω")
        if not preferences.telegram_chat_id:
            print("   ‚Ä¢ –ù–µ —É–∫–∞–∑–∞–Ω Chat ID")
        if not preferences.is_telegram_enabled:
            print("   ‚Ä¢ –£–≤–µ–¥–æ–º–ª–µ–Ω–∏—è –æ—Ç–∫–ª—é—á–µ–Ω—ã")
    
    # 6. –í—ã–≤–æ–¥–∏–º –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏
    print_setup_instructions()
    
    print(f"\n‚ú® –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ!")
    print(f"üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞:")
    print(f"   ‚Ä¢ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π —Å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏—è–º–∏: {UserNotificationPreferences.objects.count()}")
    print(f"   ‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π: {UserNotificationPreferences.objects.filter(is_telegram_enabled=True).count()}")

if __name__ == '__main__':
    main()